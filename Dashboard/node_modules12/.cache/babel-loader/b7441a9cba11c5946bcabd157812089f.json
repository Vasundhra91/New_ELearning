{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\src\\\\views\\\\AddQues.js\";\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextareaAutosize';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from \"axios\";\nimport Select from \"react-select\";\n\nvar AddQuestion =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddQuestion, _React$Component);\n\n  function AddQuestion() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddQuestion);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddQuestion)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      MCQ_option: [],\n      MCQ_ques: [],\n      MCQ_Answer: [],\n      Ques_id: Math.random(),\n      selectedOption: \"\",\n      data: {\n        label: \"Loading ...\",\n        value: \"\"\n      },\n      loading: true\n    };\n\n    _this.handleChange = function (selectedOption) {\n      _this.setState({\n        selectedOption: selectedOption.value\n      });\n\n      _this.setState({\n        loading: true\n      });\n    };\n\n    _this.handleEvent = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.handleSumbmitEvent = function (e) {\n      e.preventDefault(); //  var data1 = \"\";\n\n      if (_this.state.MCQ_option !== \"\" && _this.state.MCQ_ques !== \"\") {\n        var optionid = _this.state.MCQ_option.split(','); //var MCQ_queslist = ''\n\n\n        var jsonObj = [];\n\n        for (var i = 0; i < optionid.length; i++) {\n          // MCQ_queslist = MCQ_queslist + ',' + '\"' + optionid[i] + '\"'\n          jsonObj.push(optionid[i]);\n        }\n\n        var tempDate = new Date();\n        var date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds(); //data1 = '{\"Ques_id\":' + '\"'+this.state.Ques_id+'\"'+ ',\"MCQ_Answer\":' + '\"'+this.state.MCQ_Answer+'\"'+ ',\"MCQ_ques\":' + '\"'+this.state.MCQ_ques+'\"'+ ',\"User_id\":' +0+ ',\"Result\":' + '\"'+\"null\"+'\"'+ ',\"MCQ_option\":{\"option\":[ '+ MCQ_queslist.substr(1) + ']}}';\n\n        var newdata = {\n          Ques_id: _this.state.Ques_id,\n          MCQ_Answer: _this.state.MCQ_Answer,\n          MCQ_ques: _this.state.MCQ_ques,\n          MCQ_option: jsonObj,\n          UserCourseID: _this.state.selectedOption,\n          Inserted_date: date\n        };\n        console.log(newdata);\n\n        _this.props.AddDetails(newdata);\n\n        e.target.reset();\n\n        _this.setState({\n          MCQ_option: \"\",\n          MCQ_ques: \"\",\n          MCQ_Answer: \"\" // loading: false\n\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddQuestion, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"/users/coursedetails\").then(function (result) {\n        return _this2.setState({\n          data: result.data.map(function (data) {\n            return {\n              value: data._id,\n              label: data.Usercourse\n            };\n          })\n        });\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _ref = '',\n          selectedOption = _ref.selectedOption;\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSumbmitEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Course: \"), React.createElement(\"div\", {\n        className: \"col-lg-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: selectedOption,\n        isDisabled: this.state.loading,\n        classname: \"form-control input-sm\",\n        options: this.state.data,\n        onChange: this.handleChange,\n        placeholder: \"Course Selection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Question\", React.createElement(TextareaAutosize, {\n        rowsMax: 4,\n        \"aria-label\": \"maximum height\",\n        placeholder: \"Maximum 4 rows\",\n        defaultValue: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\\r ut labore et dolore magna aliqua.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        type: \"text\",\n        id: \"MCQ_ques\",\n        onChange: this.handleEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Option\", React.createElement(\"textarea\", {\n        type: \"text\",\n        id: \"MCQ_option\",\n        onChange: this.handleEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Answer\", React.createElement(\"textarea\", {\n        type: \"text\",\n        id: \"MCQ_Answer\",\n        onChange: this.handleEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Add Ques. \"))));\n    }\n  }]);\n\n  return AddQuestion;\n}(React.Component);\n\nexport default AddQuestion;","map":{"version":3,"sources":["C:/Users/703215266/Documents/GitHub/New_Elearning1/Dashboard/src/views/AddQues.js"],"names":["React","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","makeStyles","Container","axios","Select","AddQuestion","state","MCQ_option","MCQ_ques","MCQ_Answer","Ques_id","Math","random","selectedOption","data","label","value","loading","handleChange","setState","handleEvent","e","target","id","handleSumbmitEvent","preventDefault","optionid","split","jsonObj","i","length","push","tempDate","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","newdata","UserCourseID","Inserted_date","console","log","props","AddDetails","reset","get","then","result","map","_id","Usercourse","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;IACMC,W;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,UAAU,EAAE,EAHR;AAIJC,MAAAA,OAAO,EAAEC,IAAI,CAACC,MAAL,EAJL;AAKJC,MAAAA,cAAc,EAAE,EALZ;AAMJC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE,aAAT;AAAwBC,QAAAA,KAAK,EAAE;AAA/B,OANF;AAOJC,MAAAA,OAAO,EAAE;AAPL,K;;UAgBRC,Y,GAAe,UAAAL,cAAc,EAAI;AAC7B,YAAKM,QAAL,CAAc;AAAEN,QAAAA,cAAc,EAAEA,cAAc,CAACG;AAAjC,OAAd;;AACA,YAAKG,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,K;;UACDG,W,GAAc,UAACC,CAAD,EAAO;AACjB,YAAKF,QAAL,qBACKE,CAAC,CAACC,MAAF,CAASC,EADd,EACmBF,CAAC,CAACC,MAAF,CAASN,KAD5B;AAGH,K;;UACDQ,kB,GAAqB,UAACH,CAAD,EAAO;AAExBA,MAAAA,CAAC,CAACI,cAAF,GAFwB,CAGxB;;AACA,UAAI,MAAKnB,KAAL,CAAWC,UAAX,KAA0B,EAA1B,IAAgC,MAAKD,KAAL,CAAWE,QAAX,KAAwB,EAA5D,EAAgE;AAC5D,YAAIkB,QAAQ,GAAG,MAAKpB,KAAL,CAAWC,UAAX,CAAsBoB,KAAtB,CAA4B,GAA5B,CAAf,CAD4D,CAE5D;;;AACA,YAAIC,OAAO,GAAG,EAAd;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC;AACAD,UAAAA,OAAO,CAACG,IAAR,CAAaL,QAAQ,CAACG,CAAD,CAArB;AACH;;AACD,YAAIG,QAAQ,GAAG,IAAIC,IAAJ,EAAf;AACA,YAAIC,IAAI,GAAGF,QAAQ,CAACG,WAAT,KAAyB,GAAzB,IAAgCH,QAAQ,CAACI,QAAT,KAAsB,CAAtD,IAA2D,GAA3D,GAAiEJ,QAAQ,CAACK,OAAT,EAAjE,GAAsF,GAAtF,GAA4FL,QAAQ,CAACM,QAAT,EAA5F,GAAkH,GAAlH,GAAwHN,QAAQ,CAACO,UAAT,EAAxH,GAAgJ,GAAhJ,GAAsJP,QAAQ,CAACQ,UAAT,EAAjK,CAV4D,CAY5D;;AACA,YAAIC,OAAO,GAAG;AACV/B,UAAAA,OAAO,EAAE,MAAKJ,KAAL,CAAWI,OADV;AAEVD,UAAAA,UAAU,EAAE,MAAKH,KAAL,CAAWG,UAFb;AAGVD,UAAAA,QAAQ,EAAE,MAAKF,KAAL,CAAWE,QAHX;AAIVD,UAAAA,UAAU,EAAEqB,OAJF;AAKVc,UAAAA,YAAY,EAAE,MAAKpC,KAAL,CAAWO,cALf;AAMV8B,UAAAA,aAAa,EAAET;AANL,SAAd;AASAU,QAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;AACA,cAAKK,KAAL,CAAWC,UAAX,CAAsBN,OAAtB;;AACApB,QAAAA,CAAC,CAACC,MAAF,CAAS0B,KAAT;;AACA,cAAK7B,QAAL,CAAc;AACVZ,UAAAA,UAAU,EAAE,EADF;AAEVC,UAAAA,QAAQ,EAAE,EAFA;AAGVC,UAAAA,UAAU,EAAE,EAHF,CAIV;;AAJU,SAAd;AAMH;AACJ,K;;;;;;;wCApDmB;AAAA;;AAChBN,MAAAA,KAAK,CACA8C,GADL,CACS,sBADT,EAEKC,IAFL,CAEU,UAAAC,MAAM;AAAA,eAAI,MAAI,CAAChC,QAAL,CAAc;AAAEL,UAAAA,IAAI,EAAEqC,MAAM,CAACrC,IAAP,CAAYsC,GAAZ,CAAgB,UAACtC,IAAD,EAAU;AAAE,mBAAO;AAAEE,cAAAA,KAAK,EAAEF,IAAI,CAACuC,GAAd;AAAmBtC,cAAAA,KAAK,EAAED,IAAI,CAACwC;AAA/B,aAAP;AAAoD,WAAhF;AAAR,SAAd,CAAJ;AAAA,OAFhB;AAIA,WAAKnC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH;;;6BA+CQ;AAAA,iBACsB,EADtB;AAAA,UACGJ,cADH,QACGA,cADH;AAEL,aACI;AAAM,QAAA,QAAQ,EAAE,KAAKW,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEX,cAAf;AAA+B,QAAA,UAAU,EAAE,KAAKP,KAAL,CAAWW,OAAtD;AAA+D,QAAA,SAAS,EAAC,uBAAzE;AAAiG,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWQ,IAArH;AAA2H,QAAA,QAAQ,EAAE,KAAKI,YAA1I;AAAwJ,QAAA,WAAW,EAAC,kBAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CADA,EAOG;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,oBAAC,gBAAD;AACtB,QAAA,OAAO,EAAE,CADa;AAEtB,sBAAW,gBAFW;AAGtB,QAAA,WAAW,EAAC,gBAHU;AAItB,QAAA,YAAY,EAAC,+HAJS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAQG;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAC,UAAzB;AAAoC,QAAA,QAAQ,EAAE,KAAKE,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARH,CADL,EAUK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACR;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAC,YAAzB;AAAsC,QAAA,QAAQ,EAAE,KAAKA,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,CAVL,EAYK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACR;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAC,YAAzB;AAAsC,QAAA,QAAQ,EAAE,KAAKA,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,CAZL,EAcK;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdL,CAPH,CADJ,CADJ;AA4BH;;;;EA7FqB/B,KAAK,CAACkE,S;;AAgGhC,eAAelD,WAAf","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextareaAutosize';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nclass AddQuestion extends React.Component {\r\n    state = {\r\n        MCQ_option: [],\r\n        MCQ_ques: [],\r\n        MCQ_Answer: [],\r\n        Ques_id: Math.random(),\r\n        selectedOption: \"\",\r\n        data: { label: \"Loading ...\", value: \"\" },\r\n        loading: true\r\n    }\r\n    componentDidMount() {\r\n        axios\r\n            .get(\"/users/coursedetails\")\r\n            .then(result => this.setState({ data: result.data.map((data) => { return { value: data._id, label: data.Usercourse } }) }))\r\n\r\n        this.setState({ loading: false})\r\n    }\r\n    handleChange = selectedOption => {\r\n        this.setState({ selectedOption: selectedOption.value });\r\n        this.setState({ loading: true })\r\n    };\r\n    handleEvent = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSumbmitEvent = (e) => {\r\n\r\n        e.preventDefault();\r\n        //  var data1 = \"\";\r\n        if (this.state.MCQ_option !== \"\" && this.state.MCQ_ques !== \"\") {\r\n            var optionid = this.state.MCQ_option.split(',');\r\n            //var MCQ_queslist = ''\r\n            let jsonObj = []\r\n\r\n            for (var i = 0; i < optionid.length; i++) {\r\n                // MCQ_queslist = MCQ_queslist + ',' + '\"' + optionid[i] + '\"'\r\n                jsonObj.push(optionid[i])\r\n            }\r\n            var tempDate = new Date();\r\n            var date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds();\r\n\r\n            //data1 = '{\"Ques_id\":' + '\"'+this.state.Ques_id+'\"'+ ',\"MCQ_Answer\":' + '\"'+this.state.MCQ_Answer+'\"'+ ',\"MCQ_ques\":' + '\"'+this.state.MCQ_ques+'\"'+ ',\"User_id\":' +0+ ',\"Result\":' + '\"'+\"null\"+'\"'+ ',\"MCQ_option\":{\"option\":[ '+ MCQ_queslist.substr(1) + ']}}';\r\n            var newdata = {\r\n                Ques_id: this.state.Ques_id,\r\n                MCQ_Answer: this.state.MCQ_Answer,\r\n                MCQ_ques: this.state.MCQ_ques,\r\n                MCQ_option: jsonObj,\r\n                UserCourseID: this.state.selectedOption,\r\n                Inserted_date: date\r\n\r\n            }\r\n            console.log(newdata)\r\n            this.props.AddDetails(newdata)\r\n            e.target.reset();\r\n            this.setState({\r\n                MCQ_option: \"\",\r\n                MCQ_ques: \"\",\r\n                MCQ_Answer: \"\"\r\n                // loading: false\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { selectedOption } = '';\r\n        return (\r\n            <form onSubmit={this.handleSumbmitEvent}>\r\n                <div className=\"container\">\r\n                <div  className=\"row\">\r\n                    <div>Course: </div>\r\n                    <div className=\"col-lg-2\">\r\n                        <Select value={selectedOption} isDisabled={this.state.loading} classname=\"form-control input-sm\" options={this.state.data} onChange={this.handleChange} placeholder=\"Course Selection\" />\r\n                        </div>\r\n                   </div>\r\n                   <div  className=\"row\">\r\n                        <label>Question\r\n                        <TextareaAutosize\r\n  rowsMax={4}\r\n  aria-label=\"maximum height\"\r\n  placeholder=\"Maximum 4 rows\"\r\n  defaultValue=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\r\n      ut labore et dolore magna aliqua.\"\r\n/>\r\n                           <textarea type=\"text\" id=\"MCQ_ques\" onChange={this.handleEvent}></textarea></label>\r\n                        <label>Option\r\n                <textarea type=\"text\" id=\"MCQ_option\" onChange={this.handleEvent}></textarea></label>\r\n                        <label>Answer\r\n                <textarea type=\"text\" id=\"MCQ_Answer\" onChange={this.handleEvent}></textarea></label>\r\n                        <button type=\"submit\">Add Ques. </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddQuestion;\r\n"]},"metadata":{},"sourceType":"module"}