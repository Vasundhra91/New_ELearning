{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\src\\\\views\\\\uploadMaterialfile.js\";\nimport React, { Component } from 'react';\n\nvar uploadfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(uploadfile, _Component);\n\n  function uploadfile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, uploadfile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(uploadfile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      // Initially, no file is selected \n      selectedFile: null\n    };\n\n    _this.onFileChange = function (event) {\n      // Update the state \n      _this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    _this.onFileUpload = function () {\n      // Create an object of formData \n      var formData = new FormData(); // Update the formData object \n\n      formData.append(\"myFile\", _this.state.selectedFile, _this.state.selectedFile.name);\n      console.log(_this.state.selectedFile);\n      fetch('/uploadfile/upload', {\n        method: 'POST',\n        body: JSON.stringify(_this.state.selectedFile),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }) // .then(returndata => setreturndata({ returndata }))\n      .catch(function (error) {\n        return console.error('Error:', error);\n      });\n    };\n\n    _this.fileData = function () {\n      if (_this.state.selectedFile) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"File Details:\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"File Name: \", _this.state.selectedFile.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"File Type: \", _this.state.selectedFile.type), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Last Modified:\", \" \", _this.state.selectedFile.lastModifiedDate.toDateString()));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Choose before Pressing the Upload button\"));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(uploadfile, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"GeeksforGeeks\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"File Upload using React!\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.onFileChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onFileUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Upload!\")), this.fileData());\n    }\n  }]);\n\n  return uploadfile;\n}(Component);\n\nexport default uploadfile;","map":{"version":3,"sources":["C:/Users/703215266/Documents/GitHub/New_Elearning1/Dashboard/src/views/uploadMaterialfile.js"],"names":["React","Component","uploadfile","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","fetch","method","body","JSON","stringify","headers","then","res","json","catch","error","fileData","type","lastModifiedDate","toDateString"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;IAEMC,U;;;;;;;;;;;;;;;;;UAELC,K,GAAQ;AAER;AACAC,MAAAA,YAAY,EAAE;AAHN,K;;UAORC,Y,GAAe,UAAAC,KAAK,EAAI;AAExB;AACA,YAAKC,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAEE,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AAEC,K;;UAGDC,Y,GAAe,YAAM;AACrB;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAFqB,CAIrB;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CACC,QADD,EAEC,MAAKV,KAAL,CAAWC,YAFZ,EAGC,MAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAHzB;AAMCC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKb,KAAL,CAAWC,YAAvB;AAEAa,MAAAA,KAAK,CAAC,oBAAD,EAAuB;AAC1BC,QAAAA,MAAM,EAAE,MADkB;AAE1BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,MAAKlB,KAAL,CAAWC,YAA1B,CAFoB;AAG1BkB,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAHiB,OAAvB,CAAL,CAMGC,IANH,CAMQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OANX,EAOI;AAPJ,OAQKC,KARL,CAQW,UAAAC,KAAK;AAAA,eAAIZ,OAAO,CAACY,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAAJ;AAAA,OARhB;AASD,K;;UAIAC,Q,GAAW,YAAM;AAEjB,UAAI,MAAKzB,KAAL,CAAWC,YAAf,EAA6B;AAE5B,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,MAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAAvC,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,MAAKX,KAAL,CAAWC,YAAX,CAAwByB,IAAvC,CAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACe,GADf,EAEC,MAAK1B,KAAL,CAAWC,YAAX,CAAwB0B,gBAAxB,CAAyCC,YAAzC,EAFD,CAJD,CADA;AAWA,OAbD,MAaO;AACN,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFD,CADA;AAMA;AACA,K;;;;;;;6BAEQ;AAET,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJD,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAK1B,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC;AAAQ,QAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFD,CAPD,EAaC,KAAKkB,QAAL,EAbD,CADD;AAiBC;;;;EAvFuB3B,S;;AA0FzB,eAAeC,UAAf","sourcesContent":["import React,{Component} from 'react'; \r\n\r\nclass uploadfile extends Component { \r\n\r\n\tstate = { \r\n\r\n\t// Initially, no file is selected \r\n\tselectedFile: null\r\n\t}; \r\n\t\r\n\t// On file select (from the pop up) \r\n\tonFileChange = event => { \r\n\t\r\n\t// Update the state \r\n\tthis.setState({ selectedFile: event.target.files[0] }); \r\n\t\r\n\t}; \r\n\t\r\n\t// On file upload (click the upload button) \r\n\tonFileUpload = () => { \r\n\t// Create an object of formData \r\n\tconst formData = new FormData(); \r\n\t\r\n\t// Update the formData object \r\n\tformData.append( \r\n\t\t\"myFile\", \r\n\t\tthis.state.selectedFile, \r\n\t\tthis.state.selectedFile.name \r\n\t); \r\n\t\r\n  console.log(this.state.selectedFile); \r\n\r\n  fetch('/uploadfile/upload', {\r\n    method: 'POST',\r\n    body: JSON.stringify(this.state.selectedFile),\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n      // .then(returndata => setreturndata({ returndata }))\r\n      .catch(error => console.error('Error:', error)); \r\n}\r\n\t\r\n\t// File content to be displayed after \r\n\t// file upload is complete \r\n\tfileData = () => { \r\n\t\r\n\tif (this.state.selectedFile) { \r\n\t\t\r\n\t\treturn ( \r\n\t\t<div> \r\n\t\t\t<h2>File Details:</h2> \r\n\t\t\t<p>File Name: {this.state.selectedFile.name}</p> \r\n\t\t\t<p>File Type: {this.state.selectedFile.type}</p> \r\n\t\t\t<p> \r\n\t\t\tLast Modified:{\" \"} \r\n\t\t\t{this.state.selectedFile.lastModifiedDate.toDateString()} \r\n\t\t\t</p> \r\n\t\t</div> \r\n\t\t); \r\n\t} else { \r\n\t\treturn ( \r\n\t\t<div> \r\n\t\t\t<br /> \r\n\t\t\t<h4>Choose before Pressing the Upload button</h4> \r\n\t\t</div> \r\n\t\t); \r\n\t} \r\n\t}; \r\n\t\r\n\trender() { \r\n\t\r\n\treturn ( \r\n\t\t<div> \r\n\t\t\t<h1> \r\n\t\t\tGeeksforGeeks \r\n\t\t\t</h1> \r\n\t\t\t<h3> \r\n\t\t\tFile Upload using React! \r\n\t\t\t</h3> \r\n\t\t\t<div> \r\n\t\t\t\t<input type=\"file\" onChange={this.onFileChange} /> \r\n\t\t\t\t<button onClick={this.onFileUpload}> \r\n\t\t\t\tUpload! \r\n\t\t\t\t</button> \r\n\t\t\t</div> \r\n\t\t{this.fileData()} \r\n\t\t</div> \r\n\t); \r\n\t} \r\n} \r\n\r\nexport default uploadfile; \r\n"]},"metadata":{},"sourceType":"module"}