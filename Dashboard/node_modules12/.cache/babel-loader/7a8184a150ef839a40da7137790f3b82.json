{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\src\\\\components\\\\Navbars\\\\DemoNavbar.jsx\";\nimport React from \"react\";\nimport { Collapse, Navbar, Container } from \"reactstrap\";\nimport routes from \"routes.js\";\n\nvar Header =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n    _this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.dropdownToggle = _this.dropdownToggle.bind(_assertThisInitialized(_this));\n    _this.sidebarToggle = React.createRef();\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.state.isOpen) {\n        this.setState({\n          color: \"transparent\"\n        });\n      } else {\n        this.setState({\n          color: \"dark\"\n        });\n      }\n\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"dropdownToggle\",\n    value: function dropdownToggle(e) {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    }\n  }, {\n    key: \"getBrand\",\n    value: function getBrand() {\n      var brandName = \"Default Brand\";\n      routes.map(function (prop, key) {\n        if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n          brandName = prop.name;\n        }\n\n        return null;\n      });\n      return brandName;\n    }\n  }, {\n    key: \"openSidebar\",\n    value: function openSidebar() {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    } // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n\n  }, {\n    key: \"updateColor\",\n    value: function updateColor() {\n      if (window.innerWidth < 993 && this.state.isOpen) {\n        this.setState({\n          color: \"dark\"\n        });\n      } else {\n        this.setState({\n          color: \"transparent\"\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateColor.bind(this));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n        document.documentElement.classList.toggle(\"nav-open\");\n        this.sidebarToggle.current.classList.toggle(\"toggled\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return (// add or remove classes depending if we are on full-screen-maps page or not\n        React.createElement(Navbar, {\n          color: this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"dark\" : this.state.color,\n          expand: \"lg\",\n          className: this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \" + (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(Container, {\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navbar-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navbar-toggle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          ref: this.sidebarToggle,\n          className: \"navbar-toggler\",\n          onClick: function onClick() {\n            return _this2.openSidebar();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"navbar-toggler-bar bar1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"navbar-toggler-bar bar2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"navbar-toggler-bar bar3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        })))), React.createElement(Collapse, {\n          isOpen: this.state.isOpen,\n          navbar: true,\n          className: \"justify-content-end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        })))\n      );\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/703215266/Documents/GitHub/New_Elearning1/Dashboard/src/components/Navbars/DemoNavbar.jsx"],"names":["React","Collapse","Navbar","Container","routes","Header","props","state","isOpen","dropdownOpen","color","toggle","bind","dropdownToggle","sidebarToggle","createRef","setState","e","brandName","map","prop","key","window","location","href","indexOf","layout","path","name","document","documentElement","classList","current","innerWidth","addEventListener","updateColor","history","pathname","className","openSidebar","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      dropdownOpen: false,\r\n      color: \"transparent\"\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.dropdownToggle = this.dropdownToggle.bind(this);\r\n    this.sidebarToggle = React.createRef();\r\n  }\r\n  toggle() {\r\n    if (this.state.isOpen) {\r\n      this.setState({\r\n        color: \"transparent\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"dark\"\r\n      });\r\n    }\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  dropdownToggle(e) {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  }\r\n  getBrand() {\r\n    let brandName = \"Default Brand\";\r\n    routes.map((prop, key) => {\r\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\r\n        brandName = prop.name;\r\n      }\r\n      return null;\r\n    });\r\n    return brandName;\r\n  }\r\n  openSidebar() {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\r\n  }\r\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\r\n  updateColor() {\r\n    if (window.innerWidth < 993 && this.state.isOpen) {\r\n      this.setState({\r\n        color: \"dark\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"transparent\"\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.location.pathname !== e.location.pathname &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      // add or remove classes depending if we are on full-screen-maps page or not\r\n      <Navbar\r\n        color={\r\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\r\n            ? \"dark\"\r\n            : this.state.color\r\n        }\r\n        expand=\"lg\"\r\n        className={\r\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\r\n            ? \"navbar-absolute fixed-top\"\r\n            : \"navbar-absolute fixed-top \" +\r\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\r\n        }\r\n      > \r\n        <Container fluid>\r\n          <div className=\"navbar-wrapper\">\r\n            <div className=\"navbar-toggle\">\r\n              <button\r\n                type=\"button\"\r\n                ref={this.sidebarToggle}\r\n                className=\"navbar-toggler\"\r\n                onClick={() => this.openSidebar()}\r\n              >\r\n                <span className=\"navbar-toggler-bar bar1\" />\r\n                <span className=\"navbar-toggler-bar bar2\" />\r\n                <span className=\"navbar-toggler-bar bar3\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <Collapse\r\n            isOpen={this.state.isOpen}\r\n            navbar\r\n            className=\"justify-content-end\"\r\n          >\r\n          </Collapse>\r\n          \r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}