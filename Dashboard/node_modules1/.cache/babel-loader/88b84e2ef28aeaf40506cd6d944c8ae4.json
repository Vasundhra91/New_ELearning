{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\703215266\\\\Documents\\\\GitHub\\\\New_Elearning1\\\\Dashboard\\\\src\\\\views\\\\AddQues.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport axios from \"axios\";\nimport TextField from '@material-ui/core/TextField';\nimport Select from \"react-select\";\n\nvar AddQuestion =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddQuestion, _React$Component);\n\n  function AddQuestion() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddQuestion);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddQuestion)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      MCQ_option: [],\n      MCQ_ques: [],\n      MCQ_Answer: [],\n      Ques_id: Math.random(),\n      selectedOption: \"\",\n      data: {\n        label: \"Loading ...\",\n        value: \"\"\n      },\n      loading: true,\n      classes: makeStyles(function (theme) {\n        return {\n          paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          root: {\n            '& .MuiTextField-root': {\n              margin: theme.spacing(1),\n              width: '25ch'\n            }\n          },\n          form: {\n            width: '100%',\n            // Fix IE 11 issue.\n            marginTop: theme.spacing(1)\n          },\n          submit: {\n            margin: theme.spacing(3, 0, 2)\n          }\n        };\n      })\n    };\n\n    _this.handleChange = function (selectedOption) {\n      _this.setState({\n        selectedOption: selectedOption.value\n      });\n\n      _this.setState({\n        loading: true\n      });\n    };\n\n    _this.handleEvent = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.handleSumbmitEvent = function (e) {\n      e.preventDefault(); //  var data1 = \"\";\n\n      if (_this.state.MCQ_option !== \"\" && _this.state.MCQ_ques !== \"\") {\n        var optionid = _this.state.MCQ_option.split(','); //var MCQ_queslist = ''\n\n\n        var jsonObj = [];\n\n        for (var i = 0; i < optionid.length; i++) {\n          // MCQ_queslist = MCQ_queslist + ',' + '\"' + optionid[i] + '\"'\n          jsonObj.push(optionid[i]);\n        }\n\n        var tempDate = new Date();\n        var date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds(); //data1 = '{\"Ques_id\":' + '\"'+this.state.Ques_id+'\"'+ ',\"MCQ_Answer\":' + '\"'+this.state.MCQ_Answer+'\"'+ ',\"MCQ_ques\":' + '\"'+this.state.MCQ_ques+'\"'+ ',\"User_id\":' +0+ ',\"Result\":' + '\"'+\"null\"+'\"'+ ',\"MCQ_option\":{\"option\":[ '+ MCQ_queslist.substr(1) + ']}}';\n\n        var newdata = {\n          Ques_id: _this.state.Ques_id,\n          MCQ_Answer: _this.state.MCQ_Answer,\n          MCQ_ques: _this.state.MCQ_ques,\n          MCQ_option: jsonObj,\n          UserCourseID: _this.state.selectedOption,\n          Inserted_date: date\n        };\n        console.log(newdata);\n\n        _this.props.AddDetails(newdata);\n\n        e.target.reset();\n\n        _this.setState({\n          MCQ_option: \"\",\n          MCQ_ques: \"\",\n          MCQ_Answer: \"\" // loading: false\n\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddQuestion, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.MCQ_ques.length > 0 && this.state.MCQ_Answer.length > 0 && this.state.MCQ_option.length > 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"/users/coursedetails\").then(function (result) {\n        return _this2.setState({\n          data: result.data.map(function (data) {\n            return {\n              value: data._id,\n              label: data.Usercourse\n            };\n          })\n        });\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement, _React$createElement2;\n\n      var _ref = '',\n          selectedOption = _ref.selectedOption;\n      return React.createElement(Container, {\n        component: \"main\",\n        maxWidth: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: this.state.classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        style: {\n          paddingTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Add Test Paper\"), React.createElement(\"form\", {\n        onSubmit: this.handleSumbmitEvent,\n        style: {\n          paddingTop: \"25px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-xl-2 col-md-4 col-sm-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Course:\"), React.createElement(\"div\", {\n        className: \"col-lg-2 col-xl-2 col-md-4 col-sm-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: selectedOption,\n        isDisabled: this.state.loading,\n        classname: \"form-control input-sm\",\n        options: this.state.data,\n        onChange: this.handleChange,\n        placeholder: \"Course Selection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        container: true,\n        style: {\n          paddingTop: \"15px\",\n          paddingRight: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        style: {\n          paddingRight: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(TextField, (_React$createElement = {\n        rows: 4,\n        \"aria-label\": \"maximum height\",\n        placeholder: \"Ques.\",\n        id: \"MCQ_ques\",\n        onChange: this.handleEvent\n      }, _defineProperty(_React$createElement, \"onChange\", this.handleEvent), _defineProperty(_React$createElement, \"label\", \"Question\"), _defineProperty(_React$createElement, \"variant\", \"outlined\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement))), React.createElement(Grid, {\n        item: true,\n        style: {\n          paddingRight: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        rows: 4,\n        \"aria-label\": \"maximum height\",\n        placeholder: \"Write Option with comma separated \",\n        id: \"MCQ_option\",\n        onChange: this.handleEvent,\n        label: \"Option\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        style: {\n          paddingRight: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(TextField, (_React$createElement2 = {\n        id: \"outlined-basic\",\n        \"aria-label\": \"maximum height\",\n        placeholder: \"Answer.\"\n      }, _defineProperty(_React$createElement2, \"id\", \"MCQ_Answer\"), _defineProperty(_React$createElement2, \"onChange\", this.handleEvent), _defineProperty(_React$createElement2, \"label\", \"Answer\"), _defineProperty(_React$createElement2, \"variant\", \"outlined\"), _defineProperty(_React$createElement2, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      }), _defineProperty(_React$createElement2, \"__self\", this), _React$createElement2))), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: !this.validateForm(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Add Ques. \"))))));\n    }\n  }]);\n\n  return AddQuestion;\n}(React.Component);\n\nexport default AddQuestion;","map":{"version":3,"sources":["C:/Users/703215266/Documents/GitHub/New_Elearning1/Dashboard/src/views/AddQues.js"],"names":["React","Button","Container","CssBaseline","Grid","Typography","makeStyles","TextareaAutosize","axios","TextField","Select","AddQuestion","state","MCQ_option","MCQ_ques","MCQ_Answer","Ques_id","Math","random","selectedOption","data","label","value","loading","classes","theme","paper","marginTop","spacing","display","flexDirection","alignItems","root","margin","width","form","submit","handleChange","setState","handleEvent","e","target","id","handleSumbmitEvent","preventDefault","optionid","split","jsonObj","i","length","push","tempDate","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","newdata","UserCourseID","Inserted_date","console","log","props","AddDetails","reset","get","then","result","map","_id","Usercourse","paddingTop","paddingRight","validateForm","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport axios from \"axios\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from \"react-select\";\r\nclass AddQuestion extends React.Component {\r\n    state = {\r\n        MCQ_option: [],\r\n        MCQ_ques: [],\r\n        MCQ_Answer: [],\r\n        Ques_id: Math.random(),\r\n        selectedOption: \"\",\r\n        data: { label: \"Loading ...\", value: \"\" },\r\n        loading: true,\r\n        classes: makeStyles(theme => ({\r\n            paper: {\r\n                marginTop: theme.spacing(8),\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n            },\r\n            root: {\r\n                '& .MuiTextField-root': {\r\n                  margin: theme.spacing(1),\r\n                  width: '25ch',\r\n                },\r\n              },\r\n            form: {\r\n                width: '100%', // Fix IE 11 issue.\r\n                marginTop: theme.spacing(1),\r\n            },\r\n            submit: {\r\n                margin: theme.spacing(3, 0, 2),\r\n            },\r\n        }))\r\n    }\r\n    validateForm() {\r\n        return this.state.MCQ_ques.length > 0 && this.state.MCQ_Answer.length > 0 && this.state.MCQ_option.length > 0;\r\n    }\r\n    componentDidMount() {\r\n        axios\r\n            .get(\"/users/coursedetails\")\r\n            .then(result => this.setState({ data: result.data.map((data) => { return { value: data._id, label: data.Usercourse } }) }))\r\n\r\n        this.setState({ loading: false })\r\n    }\r\n    handleChange = selectedOption => {\r\n        this.setState({ selectedOption: selectedOption.value });\r\n        this.setState({ loading: true })\r\n    };\r\n    handleEvent = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSumbmitEvent = (e) => {\r\n        e.preventDefault();\r\n        //  var data1 = \"\";\r\n        if (this.state.MCQ_option !== \"\" && this.state.MCQ_ques !== \"\") {\r\n            var optionid = this.state.MCQ_option.split(',');\r\n            //var MCQ_queslist = ''\r\n            let jsonObj = []\r\n\r\n            for (var i = 0; i < optionid.length; i++) {\r\n                // MCQ_queslist = MCQ_queslist + ',' + '\"' + optionid[i] + '\"'\r\n                jsonObj.push(optionid[i])\r\n            }\r\n            var tempDate = new Date();\r\n            var date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds();\r\n\r\n            //data1 = '{\"Ques_id\":' + '\"'+this.state.Ques_id+'\"'+ ',\"MCQ_Answer\":' + '\"'+this.state.MCQ_Answer+'\"'+ ',\"MCQ_ques\":' + '\"'+this.state.MCQ_ques+'\"'+ ',\"User_id\":' +0+ ',\"Result\":' + '\"'+\"null\"+'\"'+ ',\"MCQ_option\":{\"option\":[ '+ MCQ_queslist.substr(1) + ']}}';\r\n            var newdata = {\r\n                Ques_id: this.state.Ques_id,\r\n                MCQ_Answer: this.state.MCQ_Answer,\r\n                MCQ_ques: this.state.MCQ_ques,\r\n                MCQ_option: jsonObj,\r\n                UserCourseID: this.state.selectedOption,\r\n                Inserted_date: date\r\n\r\n            }\r\n            console.log(newdata)\r\n            this.props.AddDetails(newdata)\r\n            e.target.reset();\r\n            this.setState({\r\n                MCQ_option: \"\",\r\n                MCQ_ques: \"\",\r\n                MCQ_Answer: \"\"\r\n                // loading: false\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { selectedOption } = '';\r\n        return (\r\n        <Container component=\"main\" maxWidth=\"lg\">\r\n            <CssBaseline />\r\n            <div className={this.state.classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\" style={{paddingTop:\"15px\"}}>\r\n                    Add Test Paper\r\n              </Typography>\r\n                <form onSubmit={this.handleSumbmitEvent} style={{paddingTop:\"25px\"}}>\r\n\r\n                    <div className= \"row\">\r\n                        <div className=\"col-lg-2 col-xl-2 col-md-4 col-sm-4\">\r\n                            Course:\r\n</div><div className=\"col-lg-2 col-xl-2 col-md-4 col-sm-4\">\r\n                            <Select value={selectedOption} isDisabled={this.state.loading} classname=\"form-control input-sm\" options={this.state.data} onChange={this.handleChange} placeholder=\"Course Selection\" />\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Grid container style={{paddingTop:\"15px\", paddingRight:\"15px\"}}>\r\n                        <Grid item  style={{ paddingRight:\"15px\"}}>\r\n                            \r\n                        <TextField  rows={4}\r\n                                    aria-label=\"maximum height\"\r\n                                    placeholder=\"Ques.\" id=\"MCQ_ques\" onChange={this.handleEvent} onChange={this.handleEvent} label=\"Question\" variant=\"outlined\" />\r\n                        </Grid>\r\n                        \r\n                        <Grid item  style={{ paddingRight:\"15px\"}}>\r\n                            \r\n                        <TextField rows={4}\r\n                                    aria-label=\"maximum height\"\r\n                                    placeholder=\"Write Option with comma separated \" id=\"MCQ_option\" onChange={this.handleEvent} label=\"Option\" variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item  style={{ paddingRight:\"15px\"}}>\r\n                            \r\n                        <TextField id=\"outlined-basic\" aria-label=\"maximum height\"\r\n                                    placeholder=\"Answer.\" id=\"MCQ_Answer\" onChange={this.handleEvent} label=\"Answer\" variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\" disabled={!this.validateForm()} >Add Ques. </Button>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                </form>\r\n            </div>\r\n        </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddQuestion;\r\n"]},"metadata":{},"sourceType":"module"}